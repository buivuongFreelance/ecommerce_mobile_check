<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>CFBundleDevelopmentRegion</key>
	<string>$(DEVELOPMENT_LANGUAGE)</string>
	<key>CFBundleExecutable</key>
	<string>$(EXECUTABLE_NAME)</string>
	<key>CFBundleIdentifier</key>
	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
	<key>CFBundleInfoDictionaryVersion</key>
	<string>6.0</string>
	<key>CFBundleName</key>
	<string>Dingtoi Pro</string>
	<key>CFBundlePackageType</key>
	<string>APPL</string>
	<key>CFBundleShortVersionString</key>
	<string>$(MARKETING_VERSION)</string>
	<key>CFBundleSignature</key>
	<string>????</string>
	<key>CFBundleURLTypes</key>
	<array>
		<dict>
			<key>CFBundleTypeRole</key>
			<string>Dingtoi use Google Sign In to login and use Dingtoi Scan</string>
			<key>CFBundleURLSchemes</key>
			<array>
				<string>com.googleusercontent.apps.732135778193-1pple42f5kdmd3qnv3m5cv7nl7196i83</string>
			</array>
		</dict>
	</array>
	<key>CFBundleVersion</key>
	<string>$(CURRENT_PROJECT_VERSION)</string>
	<key>EnableBackgroundLocationUpdates</key>
	<true/>
	<key>LSRequiresIPhoneOS</key>
	<true/>
	<key>NSAppleMusicUsageDescription</key>
	<string>Using third party flutter permission handler: https://github.com/Baseflow/flutter-permission-handler/blob/develop/permission_handler/example/ios/Runner/Info.plist</string>
	<key>NSBluetoothAlwaysUsageDescription</key>
	<string>Dingtoi Scanner App would like to request access to your Bluetooth to check if it is functional or not.</string>
	<key>NSBluetoothPeripheralUsageDescription</key>
	<string>Dingtoi Scanner App would like to request access to your Bluetooth to check if it is functional or not.</string>
	<key>NSCalendarsUsageDescription</key>
	<string>Using third party flutter permission handler: https://github.com/Baseflow/flutter-permission-handler/blob/develop/permission_handler/example/ios/Runner/Info.plist</string>
	<key>NSCameraUsageDescription</key>
	<string>This app need camera permission for barcode scanning to sync with Dingtoi Marketplace.</string>
	<key>NSContactsUsageDescription</key>
	<string>Using third party flutter permission handler: https://github.com/Baseflow/flutter-permission-handler/blob/develop/permission_handler/example/ios/Runner/Info.plist</string>
	<key>NSLocationAlwaysAndWhenInUseUsageDescription</key>
	<string>This app needs access to location so Dingtoi can see where a user is to display currency by location. Blacklist check also needs location to know where users are to check.</string>
	<key>NSLocationAlwaysUsageDescription</key>
	<string>This app needs access to location so Dingtoi can see where a user is to display currency by location. Blacklist check also needs location to know where users are to check.</string>
	<key>NSLocationWhenInUseUsageDescription</key>
	<string>This app needs access to location so Dingtoi can see where a user is to display currency by location. Blacklist check also needs location to know where users are to check.</string>
	<key>NSMicrophoneUsageDescription</key>
	<string>Can I use the mic please?</string>
	<key>NSMotionUsageDescription</key>
	<string>Using third party flutter permission handler: https://github.com/Baseflow/flutter-permission-handler/blob/develop/permission_handler/example/ios/Runner/Info.plist</string>
	<key>NSPhotoLibraryUsageDescription</key>
	<string>This allows us to use your permission to share the results of the phone scan into your gallery. So you can share it to everyone through email, message, gallery.</string>
	<key>NSSpeechRecognitionUsageDescription</key>
	<string>Using third party flutter permission handler: https://github.com/Baseflow/flutter-permission-handler/blob/develop/permission_handler/example/ios/Runner/Info.plist</string>
	<key>UIBackgroundModes</key>
	<array>
		<string>location</string>
	</array>
	<key>UILaunchStoryboardName</key>
	<string>LaunchScreen</string>
	<key>UIMainStoryboardFile</key>
	<string>Main</string>
	<key>UIRequiredDeviceCapabilities</key>
	<array>
		<string>telephony</string>
	</array>
	<key>UISupportedInterfaceOrientations</key>
	<array>
		<string>UIInterfaceOrientationPortrait</string>
	</array>
	<key>UISupportedInterfaceOrientations~ipad</key>
	<array>
		<string>UIInterfaceOrientationPortrait</string>
		<string>UIInterfaceOrientationPortraitUpsideDown</string>
		<string>UIInterfaceOrientationLandscapeLeft</string>
		<string>UIInterfaceOrientationLandscapeRight</string>
	</array>
	<key>UIViewControllerBasedStatusBarAppearance</key>
	<false/>
</dict>
</plist>
